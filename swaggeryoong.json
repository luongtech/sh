{
  "openapi": "3.0.0",
  "info": {
    "title": "KIS API Specification",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://beta.kisvn.vn:8443/rest",
      "description": "KIS UAT API Server"
    },
    {
      "url": "https://trading.kisvn.vn/rest",
      "description": "KIS PROD API Server"
    }
  ],
  "components": {
    "schemas": {
      "FieldError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "error code"
          },
          "message": {
            "type": "string",
            "description": "error message"
          },
          "param": {
            "type": "string",
            "description": "parameter name that is not correct"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "error code"
          },
          "message": {
            "type": "string",
            "description": "error message"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FieldError"
            },
            "description": "error message"
          }
        }
      },
      "UserInfoResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "the unique id of TradeX user"
          },
          "username": {
            "type": "string",
            "description": "username that used for logging in TradeX System"
          },
          "accounts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "accountNumber": {
                  "type": "string",
                  "description": "sub account number"
                }
              }
            }
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "token to access all other APIs in system"
          },
          "refreshToken": {
            "type": "string",
            "description": "token to renew access_token when it's expired"
          },
          "userInfo": {
            "type": "object",
            "$ref": "#/components/schemas/UserInfoResponse",
            "description": "TradeX user information"
          }
        }
      },
      "RefreshTokenResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "new access token to call API"
          }
        }
      }
    },
    "securitySchemes": {
      "jwt": {
        "type": "apiKey",
        "in": "header",
        "name": "authorization"
      },
      "otpToken": {
        "type": "apiKey",
        "in": "header",
        "name": "otpToken"
      }
    }
  },
  "paths": {
    "/api/v1/ekyc-admin/ekyc": {
      "post": {
        "tags": [
          "EKYC"
        ],
        "summary": "Register account by EKYC",
        "responses": {
          "200": {
            "description": "Refresh Token Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshTokenResponse"
                }
              }
            }
          },
          "401": {
            "description": "Your refresh token is invalid or expired"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "matchingRate": {
                    "description": "Ekyc matching rate between front image & portrait image",
                    "type": "number"
                  },
                  "identifierId": {
                    "description": "Identifier Id",
                    "type": "string"
                  },
                  "type": {
                    "description": "Identifier type",
                    "type": "string"
                  },
                  "fullName": {
                    "description": "Full Name",
                    "type": "string"
                  },
                  "gender": {
                    "description": "Gender",
                    "type": "string"
                  },
                  "birthDay": {
                    "description": "Birthday format YYYYMMDD",
                    "type": "string"
                  },
                  "issueDate": {
                    "description": "Issue Date format YYYYMMDD",
                    "type": "string"
                  },
                  "issuePlace": {
                    "description": "Issue place",
                    "type": "string"
                  },
                  "address": {
                    "description": "Address",
                    "type": "string"
                  },
                  "phoneNo": {
                    "description": "Phone number",
                    "type": "string"
                  },
                  "email": {
                    "description": "Email",
                    "type": "string"
                  },
                  "occupation": {
                    "description": "Occupation",
                    "type": "string"
                  },
                  "permanentProvince": {
                    "description": "Permanent Province",
                    "type": "string"
                  },
                  "permanentDistrict": {
                    "description": "Permanent District",
                    "type": "string"
                  },
                  "permanentAddress": {
                    "description": "Permanent Address",
                    "type": "string"
                  },
                  "contactProvince": {
                    "description": "Contact Province",
                    "type": "string"
                  },
                  "contactDistrict": {
                    "description": "Contact District",
                    "type": "string"
                  },
                  "contactAddress": {
                    "description": "Contact Address",
                    "type": "string"
                  },
                  "backImageUrl": {
                    "description": "Back Image URL",
                    "type": "string"
                  },
                  "frontImageUrl": {
                    "description": "Front Image URL",
                    "type": "string"
                  },
                  "portraitImageUrl": {
                    "description": "Portrait Image URL",
                    "type": "string"
                  },
                  "signatureImageUrl": {
                    "description": "Signature Image URL",
                    "type": "string"
                  },
                  "referrerIdName": {
                    "description": "Referrer Id Name",
                    "type": "string"
                  },
                  "referrerBranch": {
                    "description": "Referrer branch",
                    "type": "string"
                  },
                  "bankName": {
                    "description": "Bank name",
                    "type": "string"
                  },
                  "branch": {
                    "description": "Bank branch name",
                    "type": "string"
                  },
                  "bankAccount": {
                    "description": "Bank account",
                    "type": "string"
                  },
                  "accountName": {
                    "description": "Bank account name",
                    "type": "string"
                  }
                },
                "required": [
                  "matchingRate",
                  "identifierId",
                  "type",
                  "fullName",
                  "gender",
                  "birthDay",
                  "issueDate",
                  "issuePlace",
                  "address",
                  "phoneNo",
                  "backImageUrl",
                  "frontImageUrl",
                  "portraitImageUrl",
                  "signatureImageUrl",
                  "referrerBranch"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/refreshToken": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Renew Access Token",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "grant_type": {
                    "description": "the specific grant type to renew access token",
                    "type": "string",
                    "enum": [
                      "refresh_token"
                    ]
                  },
                  "client_id": {
                    "description": "this value is unique, linking with MTS and only provide for access MTS API system",
                    "type": "string"
                  },
                  "client_secret": {
                    "description": "this value is unique, linking with MTS, only provide for access MTS API system and pair with **client_id**",
                    "type": "string"
                  },
                  "refresh_token": {
                    "description": "token to renew access_token when it's expired",
                    "type": "string"
                  }
                },
                "required": [
                  "grant_type",
                  "client_id",
                  "client_secret",
                  "refresh_token"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Refresh Token Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshTokenResponse"
                }
              }
            }
          },
          "401": {
            "description": "Your refresh token is invalid or expired"
          }
        }
      }
    },
    "/api/v1/revokeToken": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Invalidate your refresh token",
        "description": "Invalidate your refresh token that you cannot use it to get access token anymore, so you need to login again to get new refresh token & access token",
        "security": [
          {
            "jwt": []
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "refresh_token": {
                    "description": "the refresh token need to be invalidated",
                    "type": "string"
                  }
                },
                "required": [
                  "refresh_token"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Invalidated Refresh Token Successfully"
          },
          "401": {
            "description": "Your access token is invalid or expired"
          }
        }
      }
    },
    "/api/v1/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Login to get access token for TradeX",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "grant_type": {
                    "description": "the specific grant type to authenticate API system, **password_tradex** for login with TradeX account",
                    "type": "string",
                    "enum": [
                      "password"
                    ]
                  },
                  "client_id": {
                    "description": "this value is unique, linking with MTS and only provide for access MTS API system",
                    "type": "string"
                  },
                  "client_secret": {
                    "description": "this value is unique, linking with MTS, only provide for access MTS API system and pair with **client_id**",
                    "type": "string"
                  },
                  "username": {
                    "description": "TradeX username",
                    "type": "string"
                  },
                  "password": {
                    "description": "TradeX password",
                    "type": "string",
                    "format": "password"
                  }
                },
                "required": [
                  "grant_type",
                  "client_id",
                  "client_secret",
                  "username",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Authenticate Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input param",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/services/eqt/assetInfoFromPortfolio": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "accountNumber",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "accountNumber"
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "EQUITY_ASSET_INFO",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "fee": {
                      "type": "object",
                      "properties": {
                        "pendingFee": {
                          "type": "number"
                        }
                      }
                    },
                    "margin": {
                      "type": "object",
                      "properties": {
                        "equity": {
                          "type": "number"
                        },
                        "dayLoan": {
                          "type": "number"
                        },
                        "fixedLoan": {
                          "type": "number"
                        },
                        "stockMain": {
                          "type": "number"
                        },
                        "marginRatio": {
                          "type": "number"
                        },
                        "maintenanceRatio": {
                          "type": "number"
                        },
                        "marginInterestRate": {
                          "type": "number"
                        },
                        "accuredDebitInterest": {
                          "type": "number"
                        }
                      }
                    },
                    "buyingPower": {
                      "type": "object",
                      "properties": {
                        "extraCredit": {
                          "type": "number"
                        },
                        "purchasingPower": {
                          "type": "number"
                        },
                        "nonMarginPurchasingPower": {
                          "type": "number"
                        }
                      }
                    },
                    "accountSummary": {
                      "type": "object",
                      "properties": {
                        "loan": {
                          "type": "number"
                        },
                        "totalAsset": {
                          "type": "number"
                        },
                        "cashBalance": {
                          "type": "number"
                        },
                        "netAssetValue": {
                          "type": "number"
                        },
                        "netInterestFee": {
                          "type": "number"
                        },
                        "pendingCashDividendCW": {
                          "type": "number"
                        },
                        "totalStockMarketValue": {
                          "type": "number"
                        }
                      }
                    },
                    "cashInformation": {
                      "type": "object",
                      "properties": {
                        "soldT0": {
                          "type": "number"
                        },
                        "soldT1": {
                          "type": "number"
                        },
                        "cashWithdrawal": {
                          "type": "number"
                        },
                        "executedPurchaseT1": {
                          "type": "number"
                        },
                        "accuredCreditInterest": {
                          "type": "number"
                        },
                        "availableAdvancedCash": {
                          "type": "number"
                        },
                        "holdForPendingPurchaseT0": {
                          "type": "number"
                        },
                        "holdForExecutedPurchaseT0": {
                          "type": "number"
                        },
                        "pendingApprovalForWithdrawal": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/unregisterMobileOtp": {
      "post": {
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "UNREGISTER_MOBILE_OTP",
        "tags": [
          "Otp"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/services/eqt/querySoldOrders": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "accountNo",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "accountNo"
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "ORDER_QUERY_SOLD_ORDERS",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "stock": {
                        "type": "string"
                      },
                      "value": {
                        "type": "number"
                      },
                      "feeTax": {
                        "type": "number"
                      },
                      "volume": {
                        "type": "number"
                      },
                      "soldDate": {
                        "type": "string"
                      },
                      "paymentDate": {
                        "type": "string"
                      },
                      "netSoldAmount": {
                        "type": "number"
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/stopOrder/cancel": {
      "put": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "stopOrderId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          },
          {
            "otpToken": []
          }
        ],
        "summary": "CANCEL_STOP_ORDER",
        "tags": [
          "Conditional-orders"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/services/eqt/checkLoanRefundTime": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "subAccountID",
            "schema": {
              "type": "string"
            },
            "description": "subAccountID"
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "LOAN_REFUND_CHECKTIME",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "mvResult": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/services/eqt/submitAdvancePaymentCreation": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "accountNo": {
                    "type": "string",
                    "description": "accountNo"
                  },
                  "submitAmount": {
                    "type": "number",
                    "description": "submitAmount"
                  },
                  "availableCashAdvance": {
                    "type": "number",
                    "description": "availableCashAdvance"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          },
          {
            "otpToken": []
          }
        ],
        "summary": "PAYMENT_SUBMIT_CASH_IN_ADVANCE",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "description": "Successfully"
          }
        }
      }
    },
    "/api/v1/services/fno/modifyorder": {
      "put": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "orderQty": {
                    "type": "number",
                    "description": "orderQty"
                  },
                  "orderInfo": {
                    "type": "object",
                    "properties": {
                      "minQty": {
                        "type": "number",
                        "description": "minQty"
                      },
                      "symbol": {
                        "type": "string",
                        "description": "symbol"
                      },
                      "tPlus1": {
                        "type": "boolean",
                        "description": "tPlus1"
                      },
                      "userID": {
                        "type": "string",
                        "description": "userID"
                      },
                      "marketID": {
                        "type": "string",
                        "description": "marketID"
                      },
                      "position": {
                        "type": "string",
                        "description": "position"
                      },
                      "stopType": {
                        "type": "string",
                        "description": "stopType"
                      },
                      "validity": {
                        "type": "string",
                        "description": "validity"
                      },
                      "orderType": {
                        "type": "string",
                        "description": "orderType"
                      },
                      "stopOrder": {
                        "type": "boolean",
                        "description": "stopOrder"
                      },
                      "stopPrice": {
                        "type": "string",
                        "description": "stopPrice"
                      },
                      "orderNumber": {
                        "type": "string",
                        "description": "orderNumber"
                      },
                      "sellBuyType": {
                        "type": "string",
                        "description": "sellBuyType"
                      },
                      "auctionOrder": {
                        "type": "boolean",
                        "description": "auctionOrder"
                      },
                      "orderGroupID": {
                        "type": "string",
                        "description": "orderGroupID"
                      },
                      "validityDate": {
                        "type": "string",
                        "description": "validityDate"
                      },
                      "commodityName": {
                        "type": "string",
                        "description": "commodityName"
                      },
                      "contractMonth": {
                        "type": "string",
                        "description": "contractMonth"
                      },
                      "matchedQuantity": {
                        "type": "number",
                        "description": "matchedQuantity"
                      },
                      "conditionOrderGroupID": {
                        "type": "string",
                        "description": "conditionOrderGroupID"
                      }
                    }
                  },
                  "orderPrice": {
                    "type": "number",
                    "description": "orderPrice"
                  },
                  "accountNumber": {
                    "type": "string",
                    "description": "accountNumber"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "DERIVATIVES_MODIFY_ORDER",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "orderId": {
                      "type": "string"
                    },
                    "orderGroupId": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Successfully"
          }
        }
      }
    },
    "/api/v1/services/speedOrder/cancel": {
      "put": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "stockCode": {
                    "type": "string",
                    "description": "stockCode"
                  },
                  "orderPrice": {
                    "type": "number",
                    "description": "orderPrice"
                  },
                  "accountType": {
                    "type": "string",
                    "description": "accountType"
                  },
                  "sellBuyType": {
                    "type": "string",
                    "description": "sellBuyType"
                  },
                  "accountNumber": {
                    "type": "string",
                    "description": "accountNumber"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "SPEED_ORDER_CANCEL",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "orderNo": {
                            "type": "string"
                          },
                          "success": {
                            "type": "boolean"
                          },
                          "rejectCause": {
                            "type": "string"
                          },
                          "orderGroupNo": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "reject": {
                            "type": "string"
                          },
                          "success": {
                            "type": "boolean"
                          },
                          "errorCode": {
                            "type": "string"
                          },
                          "orderGroupId": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            },
            "description": "Successfully"
          }
        }
      }
    },
    "/api/v1/services/eqt/doRegisterExercise": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "marketId": {
                    "type": "string",
                    "description": "marketId"
                  },
                  "locationId": {
                    "type": "string",
                    "description": "locationId"
                  },
                  "symbolCode": {
                    "type": "string",
                    "description": "symbolCode"
                  },
                  "interfaceSeq": {
                    "type": "string",
                    "description": "interfaceSeq"
                  },
                  "accountNumber": {
                    "type": "string",
                    "description": "accountNumber"
                  },
                  "entitlementId": {
                    "type": "string",
                    "description": "entitlementId"
                  },
                  "registerQuantity": {
                    "type": "string",
                    "description": "registerQuantity"
                  },
                  "bankAccountNumber": {
                    "type": "string",
                    "description": "bankAccountNumber"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "DO_REGISTER_Right Information",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "mvResult": {
                      "type": "string"
                    },
                    "savedAuthen": {
                      "type": "string"
                    },
                    "mvReturnCode": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Successfully"
          }
        }
      }
    },
    "/api/v1/services/eqt/checkAdvancePaymentTime": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "accountNo",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "accountNo"
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "PAYMENT_CHECKK _TIME_BEFORE_SUBMIT_CASH_IN_ADVANCE",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/services/fno/orderenquiry": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "accountNumber",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "accountNumber"
          },
          {
            "in": "query",
            "name": "stockSymbol",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "stockSymbol"
          },
          {
            "in": "query",
            "name": "sellBuyType",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "sellBuyType"
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "status"
          },
          {
            "in": "query",
            "name": "validity",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "validity"
          },
          {
            "in": "query",
            "name": "fetchCount",
            "schema": {
              "type": "number"
            },
            "required": true,
            "description": "fetchCount"
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "number"
            },
            "required": true,
            "description": "offset"
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "DERIVATIVES_ORDER_BOOK",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "minQty": {
                        "type": "number"
                      },
                      "symbol": {
                        "type": "string"
                      },
                      "tPlus1": {
                        "type": "boolean"
                      },
                      "userID": {
                        "type": "string"
                      },
                      "marketID": {
                        "type": "string"
                      },
                      "position": {
                        "type": "string"
                      },
                      "stopType": {
                        "type": "string"
                      },
                      "validity": {
                        "type": "string"
                      },
                      "orderTime": {
                        "type": "string"
                      },
                      "orderType": {
                        "type": "string"
                      },
                      "stopOrder": {
                        "type": "boolean"
                      },
                      "stopPrice": {
                        "type": "number"
                      },
                      "modifiable": {
                        "type": "boolean"
                      },
                      "orderPrice": {
                        "type": "number"
                      },
                      "cancellable": {
                        "type": "boolean"
                      },
                      "orderNumber": {
                        "type": "string"
                      },
                      "orderStatus": {
                        "type": "string"
                      },
                      "sellBuyType": {
                        "type": "string"
                      },
                      "auctionOrder": {
                        "type": "boolean"
                      },
                      "matchedPrice": {
                        "type": "number"
                      },
                      "matchedValue": {
                        "type": "number"
                      },
                      "orderGroupID": {
                        "type": "string"
                      },
                      "rejectReason": {
                        "type": "string"
                      },
                      "validityDate": {
                        "type": "string"
                      },
                      "accountNumber": {
                        "type": "string"
                      },
                      "commodityName": {
                        "type": "string"
                      },
                      "contractMonth": {
                        "type": "string"
                      },
                      "orderQuantity": {
                        "type": "number"
                      },
                      "matchedQuantity": {
                        "type": "number"
                      },
                      "unmatchedQuantity": {
                        "type": "number"
                      },
                      "conditionOrderGroupID": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/services/eqt/enquiryInstrumentDW": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "accountNumber",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "accountNumber"
          },
          {
            "in": "query",
            "name": "fromDate",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "fromDate"
          },
          {
            "in": "query",
            "name": "toDate",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "toDate"
          },
          {
            "in": "query",
            "name": "symbol",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "symbol"
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "status"
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "number"
            },
            "required": false,
            "description": "offset"
          },
          {
            "in": "query",
            "name": "fetchCount",
            "schema": {
              "type": "number"
            },
            "required": false,
            "description": "fetchCount"
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "STOCK_TRANSFER_HISTORY",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string"
                      },
                      "symbol": {
                        "type": "string"
                      },
                      "volume": {
                        "type": "number"
                      },
                      "stockType": {
                        "type": "string"
                      },
                      "requestTime": {
                        "type": "string"
                      },
                      "senderAccount": {
                        "type": "string"
                      },
                      "receiverAccount": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/stopOrder/history": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "accountNumber",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "account number to query"
          },
          {
            "in": "query",
            "name": "fromDate",
            "schema": {
              "type": "string"
            },
            "description": "query order that place after or on this date, format is **yyyyMMdd**, default is **19700101**"
          },
          {
            "in": "query",
            "name": "toDate",
            "schema": {
              "type": "string"
            },
            "description": "query order that place before or on this date, format is **yyyyMMdd**, default is **today**"
          },
          {
            "in": "query",
            "name": "code",
            "schema": {
              "type": "string"
            },
            "description": "query filter by 1 stock"
          },
          {
            "in": "query",
            "name": "sellBuyType",
            "schema": {
              "enum": [
                "SELL",
                "BUY"
              ],
              "type": "string"
            },
            "description": "query filter by buy or sell type"
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "enum": [
                "PENDING",
                "COMPLETED",
                "CANCELLED",
                "FAILED"
              ],
              "type": "string"
            },
            "description": "query filter by status of stop order"
          },
          {
            "in": "query",
            "name": "orderType",
            "schema": {
              "enum": [
                "STOP",
                "STOP_LIMIT"
              ],
              "type": "string"
            },
            "description": "query filter by order type"
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "number"
            },
            "description": "the sequence number of the last record, using to query next data"
          },
          {
            "in": "query",
            "name": "stopOrderId",
            "schema": {
              "type": "number"
            },
            "description": "query 1 order, usually when querying data of a specific order"
          },
          {
            "in": "query",
            "name": "fetchCount",
            "schema": {
              "enum": [
                "20",
                "40",
                "60",
                "80",
                "100"
              ],
              "type": "integer"
            },
            "description": "the number of records return for each query, default is **20**"
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "query stop order history",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "name of stock symbol"
                      },
                      "status": {
                        "type": "string",
                        "description": "the status of the stop order"
                      },
                      "toDate": {
                        "type": "string",
                        "description": "toDate"
                      },
                      "fromDate": {
                        "type": "string",
                        "description": "fromDate"
                      },
                      "orderType": {
                        "enum": [
                          "STOP",
                          "STOP_LIMIT"
                        ],
                        "type": "string",
                        "description": "the type of the stop order"
                      },
                      "stopPrice": {
                        "type": "number",
                        "format": "double",
                        "description": "stop price of order"
                      },
                      "cancelTime": {
                        "type": "string",
                        "description": "the time that cancelled order, format is yyyyMMddhhmmss"
                      },
                      "createTime": {
                        "type": "string",
                        "description": "the time that created the stop order"
                      },
                      "orderPrice": {
                        "type": "number",
                        "format": "double",
                        "description": "price of order"
                      },
                      "orderNumber": {
                        "type": "string",
                        "description": "the real order number from SEC System"
                      },
                      "sellBuyType": {
                        "enum": [
                          "BUY",
                          "SELL"
                        ],
                        "type": "string",
                        "description": "indicate sell or buy order"
                      },
                      "stopOrderId": {
                        "type": "number",
                        "description": "id"
                      },
                      "errorMessage": {
                        "type": "string",
                        "description": "the error message if place real order failed"
                      },
                      "accountNumber": {
                        "type": "string",
                        "description": "account"
                      },
                      "orderQuantity": {
                        "type": "integer",
                        "description": "quantity of order"
                      }
                    }
                  }
                }
              }
            },
            "description": "Stop Order History"
          }
        }
      }
    },
    "/api/v1/services/fno/cashDWenquiry": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "accountNo",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "accountNo"
          },
          {
            "in": "query",
            "name": "fromDate",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "fromDate"
          },
          {
            "in": "query",
            "name": "toDate",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "toDate"
          },
          {
            "in": "query",
            "name": "transferType",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "transferType"
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "status"
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "number"
            },
            "required": false,
            "description": "offset"
          },
          {
            "in": "query",
            "name": "fetchCount",
            "schema": {
              "type": "number"
            },
            "required": false,
            "description": "fetchCount"
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "DERIVATIVES_CASH_TRANSFER_TO_SUB_ACCOUNTS_OR_TO_BANK_HISTORY",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "date": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "content": {
                        "type": "string"
                      },
                      "beneficiary": {
                        "type": "string"
                      },
                      "transferFee": {
                        "type": "string"
                      },
                      "transferType": {
                        "type": "string"
                      },
                      "transferAmount": {
                        "type": "number"
                      },
                      "beneficiaryBank": {
                        "type": "string"
                      },
                      "transferAccount": {
                        "type": "string"
                      },
                      "beneficiaryAccountNo": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/services/eqt/orderDetail": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "accountNumber",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "accountNumber"
          },
          {
            "in": "query",
            "name": "orderGroupNo",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "orderGroupNo"
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "ORDER_DETAIL",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "time": {
                        "type": "string"
                      },
                      "price": {
                        "type": "number"
                      },
                      "action": {
                        "type": "string"
                      },
                      "remark": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "orderID": {
                        "type": "string"
                      },
                      "quantity": {
                        "type": "number"
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/stopOrder/modify": {
      "put": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "toDate": {
                    "type": "string"
                  },
                  "fromDate": {
                    "type": "string"
                  },
                  "stopPrice": {
                    "type": "number"
                  },
                  "orderPrice": {
                    "type": "number",
                    "description": "If STOP, not needed"
                  },
                  "stopOrderId": {
                    "type": "string"
                  },
                  "orderQuantity": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          },
          {
            "otpToken": []
          }
        ],
        "summary": "MODIFY_STOP_ORDER",
        "tags": [
          "Conditional-orders"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/services/fno/clientstockstatementenquiry": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "accountNo",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "accountNo"
          },
          {
            "in": "query",
            "name": "fromDate",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "fromDate"
          },
          {
            "in": "query",
            "name": "toDate",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "toDate"
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "DERIVATIVES_Position statement",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "date": {
                        "type": "string"
                      },
                      "totalPL": {
                        "type": "number"
                      },
                      "longQtty": {
                        "type": "number"
                      },
                      "seriesID": {
                        "type": "string"
                      },
                      "shortQtty": {
                        "type": "number"
                      },
                      "netoffLong": {
                        "type": "number"
                      },
                      "balanceLong": {
                        "type": "number"
                      },
                      "expiredLong": {
                        "type": "number"
                      },
                      "netoffShort": {
                        "type": "number"
                      },
                      "balanceShort": {
                        "type": "number"
                      },
                      "expiredShort": {
                        "type": "number"
                      },
                      "shortAverageAsk": {
                        "type": "string"
                      },
                      "longAveragePrice": {
                        "type": "string"
                      },
                      "balanceClosingPrice": {
                        "type": "number"
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/services/eqt/calculateInterestAmt": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "accountNumber",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "accountNumber"
          },
          {
            "in": "query",
            "name": "mvSettlement",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "mvSettlement"
          },
          {
            "in": "query",
            "name": "mvAmount",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "mvAmount"
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "CALCULATE_INTEREST_AMT",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "interestAmt": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/services/fno/queryBankInfo": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "accountNo",
            "schema": {
              "type": "string"
            },
            "description": "accountNo"
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "BANK_INFO_FNO",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "bankID": {
                        "type": "string"
                      },
                      "bankAccNo": {
                        "type": "string"
                      },
                      "isDefault": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/services/fno/orderenquiryhistory": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "accountNumber",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "accountNumber"
          },
          {
            "in": "query",
            "name": "fromDate",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "fromDate"
          },
          {
            "in": "query",
            "name": "toDate",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "toDate"
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "required": true,
            "description": "status"
          },
          {
            "in": "query",
            "name": "code",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "code"
          },
          {
            "in": "query",
            "name": "sellBuyType",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "sellBuyType"
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "number"
            },
            "required": false,
            "description": "offset"
          },
          {
            "in": "query",
            "name": "fetchCount",
            "schema": {
              "type": "number"
            },
            "required": false,
            "description": "fetchCount"
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "DERIVATIVES_Order history",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "tax": {
                        "type": "number"
                      },
                      "date": {
                        "type": "string"
                      },
                      "time": {
                        "type": "string"
                      },
                      "symbol": {
                        "type": "string"
                      },
                      "volume": {
                        "type": "number"
                      },
                      "channel": {
                        "type": "string"
                      },
                      "validity": {
                        "type": "string"
                      },
                      "orderTime": {
                        "type": "string"
                      },
                      "orderType": {
                        "type": "string"
                      },
                      "modifiable": {
                        "type": "boolean"
                      },
                      "orderPrice": {
                        "type": "number"
                      },
                      "cancellable": {
                        "type": "boolean"
                      },
                      "orderNumber": {
                        "type": "string"
                      },
                      "orderStatus": {
                        "type": "string"
                      },
                      "sellBuyType": {
                        "type": "string"
                      },
                      "matchedPrice": {
                        "type": "number"
                      },
                      "matchedValue": {
                        "type": "number"
                      },
                      "rejectReason": {
                        "type": "string"
                      },
                      "accountNumber": {
                        "type": "string"
                      },
                      "commodityName": {
                        "type": "string"
                      },
                      "contractMonth": {
                        "type": "string"
                      },
                      "orderQuantity": {
                        "type": "number"
                      },
                      "transactionFee": {
                        "type": "number"
                      },
                      "matchedQuantity": {
                        "type": "number"
                      },
                      "unmatchedQuantity": {
                        "type": "number"
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/subaccount/retrieve": {
      "get": {
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "RETRIEVE_ALL_SUB_ACCOUNTS",
        "tags": [
          "Ttl-based"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "clientID",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "clientID is required only for broker"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "service": {
                        "type": "string"
                      },
                      "clientID": {
                        "type": "string"
                      },
                      "sessionID": {
                        "type": "string"
                      },
                      "prohibitBuy": {
                        "type": "string"
                      },
                      "accountState": {
                        "type": "string"
                      },
                      "investorType": {
                        "type": "string"
                      },
                      "prohibitSell": {
                        "type": "string"
                      },
                      "subAccountID": {
                        "type": "string"
                      },
                      "tradingAccSeq": {
                        "type": "string"
                      },
                      "counterPartyAC": {
                        "type": "string"
                      },
                      "subAccountName": {
                        "type": "string"
                      },
                      "subAccountType": {
                        "type": "string"
                      },
                      "investorTypeName": {
                        "type": "string"
                      },
                      "defaultSubAccount": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/services/fno/maxlongshortenquiry": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "accountNumber",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "accountNumber"
          },
          {
            "in": "query",
            "name": "symbolCode",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "symbolCode"
          },
          {
            "in": "query",
            "name": "sellBuyType",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "sellBuyType"
          },
          {
            "in": "query",
            "name": "price",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "price"
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "DERIVATIVES_MAX_LONG_SHORT_ENQUIRY",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "maxLong": {
                      "type": "number"
                    },
                    "maxShort": {
                      "type": "number"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/services/eqt/accountbalance": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "accountNumber",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "accountNumber"
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "EQT_ACCOUNT_BALANCE",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "marginCallByCash": {
                      "type": "number"
                    },
                    "marginCallByStockMainAmount": {
                      "type": "number"
                    },
                    "buyingPower": {
                      "type": "number"
                    },
                    "withdrawable": {
                      "type": "number"
                    },
                    "availableAdvance": {
                      "type": "number"
                    },
                    "holdForPendingPurchase": {
                      "type": "number"
                    },
                    "holdForExecutedPurchase": {
                      "type": "number"
                    },
                    "outstandingLoan": {
                      "type": "number"
                    },
                    "marginCall": {
                      "type": "number"
                    },
                    "deposit": {
                      "type": "number"
                    },
                    "sellingStockOutMarginPortfolio": {
                      "type": "number"
                    },
                    "availablePowerToExerciseRight": {
                      "type": "number"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/services/eqt/getAllRightList": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "accountNo",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "accountNo"
          },
          {
            "in": "query",
            "name": "symbol",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "symbol"
          },
          {
            "in": "query",
            "name": "rightType",
            "schema": {
              "enum": [
                "ALL",
                "CASH_DIVIDEND",
                "STOCK_DIVIDEND",
                "BONUS_SHARE",
                "ADDITIONAL_ISSUE"
              ],
              "type": "string"
            },
            "required": false,
            "description": "rightType"
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "status"
          },
          {
            "in": "query",
            "name": "fromDate",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "fromDate"
          },
          {
            "in": "query",
            "name": "toDate",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "toDate"
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "number"
            },
            "required": false,
            "description": "offset"
          },
          {
            "in": "query",
            "name": "fetchCount",
            "schema": {
              "type": "number"
            },
            "required": false,
            "description": "fetchCount"
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "Right subscriptions",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "ratio": {
                        "type": "number"
                      },
                      "status": {
                        "type": "string"
                      },
                      "symbol": {
                        "type": "string"
                      },
                      "rightType": {
                        "type": "string"
                      },
                      "closedDate": {
                        "type": "string"
                      },
                      "rightStock": {
                        "type": "number"
                      },
                      "exerciseDate": {
                        "type": "string"
                      },
                      "receivableQty": {
                        "type": "number"
                      },
                      "receivableCash": {
                        "type": "number"
                      },
                      "qtyAtClosedDate": {
                        "type": "number"
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/services/eqt/enquirysignorder": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "accountNo",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "accountNo"
          },
          {
            "in": "query",
            "name": "stockSymbol",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "stockSymbol"
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "status"
          },
          {
            "in": "query",
            "name": "fromDate",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "fromDate"
          },
          {
            "in": "query",
            "name": "toDate",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "toDate"
          },
          {
            "in": "query",
            "name": "channel",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "channel"
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "number"
            },
            "required": false,
            "description": "offset"
          },
          {
            "in": "query",
            "name": "fetchCount",
            "schema": {
              "type": "number"
            },
            "required": false,
            "description": "fetchCount"
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "QUERY_ORDER_CONFIRMATION",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "price": {
                        "type": "number"
                      },
                      "refID": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "volume": {
                        "type": "number"
                      },
                      "channel": {
                        "type": "string"
                      },
                      "orderNo": {
                        "type": "string"
                      },
                      "accountNo": {
                        "type": "string"
                      },
                      "isHistory": {
                        "type": "string"
                      },
                      "orderType": {
                        "type": "string"
                      },
                      "stockSymbol": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/services/eqt/marginLoan": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "accountNo",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "accountNo"
          },
          {
            "in": "query",
            "name": "fromDate",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "fromDate"
          },
          {
            "in": "query",
            "name": "toDate",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "toDate"
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "number"
            },
            "required": false,
            "description": "offset"
          },
          {
            "in": "query",
            "name": "fetchCount",
            "schema": {
              "type": "number"
            },
            "required": false,
            "description": "fetchCount"
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "MARGIN_LOAN",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "no": {
                        "type": "string"
                      },
                      "date": {
                        "type": "string"
                      },
                      "forceSell": {
                        "type": "number"
                      },
                      "totalDebt": {
                        "type": "number"
                      },
                      "marginCall": {
                        "type": "number"
                      },
                      "newDebtIncrease": {
                        "type": "number"
                      },
                      "paidAmountDecrease": {
                        "type": "number"
                      },
                      "beginningOutstandingLoan": {
                        "type": "number"
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/tradedate": {
      "get": {
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "TRADE_DATE_TIME",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "weekDay": {
                      "type": "number",
                      "description": "weekDay"
                    },
                    "coreTime": {
                      "type": "string",
                      "description": "coreTime"
                    },
                    "dateTime": {
                      "type": "string",
                      "description": "dateTime"
                    },
                    "businessDay": {
                      "type": "boolean",
                      "description": "businessDay"
                    }
                  }
                }
              }
            },
            "description": "QueryServerTime response"
          }
        }
      }
    },
    "/api/v1/services/eqt/cancelFundTransfer": {
      "put": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "mvStatus": {
                    "type": "string",
                    "description": "mvStatus"
                  },
                  "mvTranID": {
                    "type": "string",
                    "description": "mvTranID"
                  },
                  "subAccountID": {
                    "type": "string",
                    "description": "subAccountID"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "FUND_TRANSFER_CANCEL",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "mainResult": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Successfully"
          }
        }
      }
    },
    "/api/v1/services/eqt/queryBankInfo": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "accountNo",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "accountNo"
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "BANK_INFO",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "bankID": {
                        "type": "string"
                      },
                      "balance": {
                        "type": "number"
                      },
                      "bankAccNo": {
                        "type": "string"
                      },
                      "isDefault": {
                        "type": "boolean"
                      },
                      "ownerName": {
                        "type": "string"
                      },
                      "bankBranchID": {
                        "type": "string"
                      },
                      "bankBranchName": {
                        "type": "string"
                      },
                      "bankname": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/services/eqt/enquiryorder": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "clientID",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "clientID. it's required when current logged in user is broker"
          },
          {
            "in": "query",
            "name": "accountNo",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "accountNo"
          },
          {
            "in": "query",
            "name": "stockSymbol",
            "schema": {
              "type": "string"
            },
            "description": "stockSymbol"
          },
          {
            "in": "query",
            "name": "sellBuyType",
            "schema": {
              "type": "string",
              "enum": [
                "SELL",
                "BUY",
                "ALL"
              ]
            },
            "description": "sellBuyType"
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string",
              "enum": [
                "NONE",
                "ALL",
                "FULLYFILLED",
                "QUEUED",
                "PARTIALLYFILL",
                "REJECTED",
                "CANCELLED",
                "READYTOSEND",
                "SENDING",
                "PENDINGAPPROVAL",
                "STOP",
                "WAITINGCANCEL",
                "WAITINGMODIFY",
                "INACTIVE",
                "EXPIRED",
                "ACTIVE",
                "UNMATCH",
                "MATCHED",
                "COMPLETED",
                "PRICEWARNING",
                "MODIFYCANCEL"
              ]
            },
            "description": "* ALL_en=ALL\n* PARTIALLYFILL_en=PEX\n* MODIFYCANCEL_en=SOI','IAV','SOR','PAP','PSB','BIX','MPA','MPS','BPM2','PAI\n* ACTIVE_en=SOI','IAV','SOR','PAP','PSB','BIX','MPA','MPS','BPM2','PAI','PXP','PEX\n* NONE_en=NONE\n* FULLYFILLED_en=FLL\n* QUEUE_en=BIX','BIX2','PXP\n* REJECTED_en=REJ','KLL\n* CANCELLED_en=CAN\n* READYTOSEND_en=PSB\n* SENDING_en=BMS','BSS','MSD','STB','CMO\n* PENDINGAPPROVAL_en=MPA','PAP','PAI\n* STOP_en=SOR\n* PRICEWARNING_en=WRN','WRR\n* COMPLETED_en=CPD\n* WAITINGCANCEL_en=BPM\n* WAITINGMODIFY_en=MPS\n* INACTIVE_en=SOI','IAV\n* EXPIRED_en=EXP','PXP\n* UNMATCH_en=SOI','IAV','SOR','PAP','PSB','BIX','MPA','MPS','BPM2','PAI','PEX','BMS','BSS','MSD','ST\n* MATCHED_en=FLL','CPD','FEX','PEX\n"
          },
          {
            "in": "query",
            "name": "validity",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "validity"
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "number"
            },
            "required": false,
            "description": "offset"
          },
          {
            "in": "query",
            "name": "fetchCount",
            "schema": {
              "type": "number"
            },
            "required": false,
            "description": "fetchCount"
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "ORDER_BOOK",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "symbol": {
                        "type": "string"
                      },
                      "channel": {
                        "type": "string"
                      },
                      "orderNo": {
                        "type": "string"
                      },
                      "orderQty": {
                        "type": "number"
                      },
                      "validity": {
                        "type": "string"
                      },
                      "accountNo": {
                        "type": "string"
                      },
                      "orderTime": {
                        "type": "string"
                      },
                      "orderType": {
                        "enum": [
                          "ODDLOT",
                          "LO",
                          "ATC",
                          "ATO",
                          "MP",
                          "MTL",
                          "MAK",
                          "MOK",
                          "PLO"
                        ],
                        "type": "string"
                      },
                      "matchedQty": {
                        "type": "number"
                      },
                      "matchedPrice": {
                        "type": "number"
                      },
                      "modifiable": {
                        "type": "boolean"
                      },
                      "orderPrice": {
                        "type": "number"
                      },
                      "canceledQty": {
                        "type": "number"
                      },
                      "cancellable": {
                        "type": "boolean"
                      },
                      "orderStatus": {
                        "type": "string"
                      },
                      "buySellOrder": {
                        "enum": [
                          "SELL",
                          "BUY",
                          "ALL"
                        ],
                        "type": "string"
                      },
                      "matchedValue": {
                        "type": "number"
                      },
                      "orderGroupNo": {
                        "type": "string"
                      },
                      "unmatchedQty": {
                        "type": "number"
                      },
                      "rejectReason": {
                        "type": "boolean"
                      },
                      "feeTax": {
                        "type": "number"
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/services/fno/clientportfolio": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "accountNo",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "accountNo"
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "DERIVATIVES_PORTFOLIO",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accountNo": {
                      "type": "string"
                    },
                    "openPositionList": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "long": {
                            "type": "number"
                          },
                          "short": {
                            "type": "number"
                          },
                          "seriesID": {
                            "type": "string"
                          },
                          "averageAsk": {
                            "type": "number"
                          },
                          "averageBid": {
                            "type": "number"
                          },
                          "floatingPL": {
                            "type": "number"
                          },
                          "expiredDate": {
                            "type": "string"
                          },
                          "marketPrice": {
                            "type": "number"
                          }
                        }
                      }
                    },
                    "closePositionList": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "long": {
                            "type": "number"
                          },
                          "short": {
                            "type": "number"
                          },
                          "seriesID": {
                            "type": "string"
                          },
                          "tradingPL": {
                            "type": "number"
                          },
                          "averageAsk": {
                            "type": "number"
                          },
                          "averageBid": {
                            "type": "number"
                          },
                          "expiredDate": {
                            "type": "string"
                          },
                          "marketPrice": {
                            "type": "number"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/services/eqt/loanConfirmEnquiry": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "accountNumber",
            "schema": {
              "type": "string"
            },
            "description": "accountNumber"
          },
          {
            "in": "query",
            "name": "historyBy",
            "schema": {
              "type": "number"
            },
            "description": "historyBy"
          },
          {
            "in": "query",
            "name": "signed",
            "schema": {
              "type": "boolean"
            },
            "description": "signed"
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "LOAN_CONFIRM",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "signable": {
                      "type": "boolean"
                    },
                    "dateConfirm": {
                      "type": "string"
                    },
                    "accountNumber": {
                      "type": "string"
                    },
                    "applicationID": {
                      "type": "string"
                    },
                    "endingBalance": {
                      "type": "number"
                    },
                    "applicationDate": {
                      "type": "string"
                    },
                    "outstandingDept": {
                      "type": "number"
                    },
                    "repaymentAmount": {
                      "type": "number"
                    },
                    "beginningBalance": {
                      "type": "number"
                    },
                    "originalOutstanding": {
                      "type": "number"
                    },
                    "outstandingInterest": {
                      "type": "number"
                    },
                    "additionalDisbursement": {
                      "type": "number"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/services/fno/cpcashDWenquiry": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "accountNo",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "accountNo"
          },
          {
            "in": "query",
            "name": "fromDate",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "fromDate"
          },
          {
            "in": "query",
            "name": "toDate",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "toDate"
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "status"
          },
          {
            "in": "query",
            "name": "transferType",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "transferType"
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "DERIVATIVES_DEPOSIT_TO_VSD_HISTORY",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "date": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "content": {
                        "type": "string"
                      },
                      "beneficiary": {
                        "type": "string"
                      },
                      "transferFee": {
                        "type": "number"
                      },
                      "transferType": {
                        "type": "string"
                      },
                      "transferAmount": {
                        "type": "number"
                      },
                      "beneficiaryBank": {
                        "type": "string"
                      },
                      "transferAccount": {
                        "type": "string"
                      },
                      "beneficiaryAccountNo": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/services/eqt/instrumentDW": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "marketID": {
                    "type": "string",
                    "description": "marketID"
                  },
                  "stockSymbol": {
                    "type": "string",
                    "description": "stockSymbol"
                  },
                  "transferVolume": {
                    "type": "number",
                    "description": "transferVolume"
                  },
                  "senderAccountNo": {
                    "type": "string",
                    "description": "senderAccountNo"
                  },
                  "receiverAccountNo": {
                    "type": "string",
                    "description": "receiverAccountNo"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "TRANSFER_STOCK",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string"
                    },
                    "tranID": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Successfully"
          }
        }
      }
    },
    "/api/v1/auth/eqt/retrieveClientAuthen": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "clientID",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "clientID"
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "GET_TYPE_OTP",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "state": {
                      "type": "string"
                    },
                    "authCode": {
                      "type": "string"
                    },
                    "clientID": {
                      "type": "string"
                    },
                    "channelID": {
                      "type": "string"
                    },
                    "authMethod": {
                      "type": "string"
                    },
                    "registered": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/services/eqt/getsubaccount": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "clientID",
            "schema": {
              "type": "string"
            },
            "description": "clientID"
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "ACCOUNT_BALANCE",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "service": {
                      "type": "string"
                    },
                    "clientID": {
                      "type": "string"
                    },
                    "sessionID": {
                      "type": "string"
                    },
                    "prohibitBuy": {
                      "type": "boolean"
                    },
                    "accountState": {
                      "type": "string"
                    },
                    "investorType": {
                      "type": "string"
                    },
                    "prohibitSell": {
                      "type": "boolean"
                    },
                    "subAccountID": {
                      "type": "string"
                    },
                    "tradingAccSeq": {
                      "type": "number"
                    },
                    "counterPartyAC": {
                      "type": "string"
                    },
                    "subAccountName": {
                      "type": "string"
                    },
                    "subAccountType": {
                      "type": "string"
                    },
                    "investorTypeName": {
                      "type": "string"
                    },
                    "defaultSubAccount": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/services/eqt/enquiryhistoryorder": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "clientID",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "clientID. it's required when current logged in user is broker"
          },
          {
            "in": "query",
            "name": "accountNo",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "accountNo"
          },
          {
            "in": "query",
            "name": "fromDate",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "fromDate"
          },
          {
            "in": "query",
            "name": "toDate",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "toDate"
          },
          {
            "in": "query",
            "name": "sellBuyType",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "sellBuyType"
          },
          {
            "in": "query",
            "name": "stockSymbol",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "stockSymbol"
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "status"
          },
          {
            "in": "query",
            "name": "validity",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "validity"
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "number"
            },
            "required": false,
            "description": "offset"
          },
          {
            "in": "query",
            "name": "fetchCount",
            "schema": {
              "type": "number"
            },
            "required": false,
            "description": "fetchCount"
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "HISTORY_ORDER",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "symbol": {
                        "type": "string"
                      },
                      "modifiable": {
                        "type": "boolean"
                      },
                      "cancellable": {
                        "type": "boolean"
                      },
                      "orderNo": {
                        "type": "string"
                      },
                      "orderQty": {
                        "type": "number"
                      },
                      "validity": {
                        "type": "string"
                      },
                      "accountNo": {
                        "type": "string"
                      },
                      "orderTime": {
                        "type": "string"
                      },
                      "orderType": {
                        "type": "string"
                      },
                      "matchedQty": {
                        "type": "number"
                      },
                      "orderPrice": {
                        "type": "number"
                      },
                      "orderStatus": {
                        "type": "string"
                      },
                      "sellBuyType": {
                        "type": "string"
                      },
                      "matchedPrice": {
                        "type": "number"
                      },
                      "matchedValue": {
                        "type": "number"
                      },
                      "unmatchedQty": {
                        "type": "number"
                      },
                      "rejectReason": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/services/eqt/cancelOrder": {
      "put": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "orders": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "orderNo": {
                          "type": "string",
                          "description": "orderNo"
                        },
                        "orderGroupNo": {
                          "type": "string",
                          "description": "orderGroupNo"
                        }
                      }
                    }
                  },
                  "accountNo": {
                    "type": "string",
                    "description": "accountNo"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "ORDER_CANCEL",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "orderNo": {
                        "type": "string"
                      },
                      "success": {
                        "type": "boolean"
                      },
                      "rejectCause": {
                        "type": "string"
                      },
                      "orderGroupNo": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "description": "Successfully"
          }
        }
      }
    },
    "/api/v1/services/eqt/submitSignOrder": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "accountNo": {
                    "type": "string",
                    "description": "accountNo"
                  },
                  "mvOrderList": {
                    "type": "array",
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "ORDER_SUBMIT_Order confirmation",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "returnCode": {
                      "type": "number"
                    }
                  }
                }
              }
            },
            "description": "Successfully"
          }
        }
      }
    },
    "/api/v1/services/eqt/enterorder": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "description": "code"
                  },
                  "orderType": {
                    "type": "string",
                    "description": "orderType"
                  },
                  "expiryDate": {
                    "type": "string",
                    "description": "expiryDate"
                  },
                  "marketType": {
                    "type": "string",
                    "description": "marketType"
                  },
                  "orderPrice": {
                    "type": "number",
                    "description": "orderPrice"
                  },
                  "sellBuyType": {
                    "type": "string",
                    "description": "sellBuyType"
                  },
                  "accountNumber": {
                    "type": "string",
                    "description": "accountNumber"
                  },
                  "orderQuantity": {
                    "type": "number",
                    "description": "orderQuantity"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "ORDER_ENTER",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "orderDetail": {
                      "type": "object",
                      "properties": {
                        "bs": {
                          "type": "string"
                        },
                        "ccy": {
                          "type": "string"
                        },
                        "qty": {
                          "type": "number"
                        },
                        "hedge": {
                          "type": "string"
                        },
                        "msQty": {
                          "type": "string"
                        },
                        "price": {
                          "type": "number"
                        },
                        "bankID": {
                          "type": "string"
                        },
                        "origin": {
                          "type": "string"
                        },
                        "orderID": {
                          "type": "string"
                        },
                        "bankACID": {
                          "type": "string"
                        },
                        "branchID": {
                          "type": "string"
                        },
                        "clientID": {
                          "type": "string"
                        },
                        "orderType": {
                          "type": "string"
                        },
                        "shortName": {
                          "type": "string"
                        },
                        "shortSell": {
                          "type": "string"
                        },
                        "stopPrice": {
                          "type": "number"
                        },
                        "holdAmText": {
                          "type": "string"
                        },
                        "timeInForce": {
                          "type": "string"
                        },
                        "allOrNothing": {
                          "type": "string"
                        },
                        "batchOrderID": {
                          "type": "string"
                        },
                        "goodTillDate": {
                          "type": "string"
                        },
                        "instrumentID": {
                          "type": "string"
                        },
                        "orderGroupID": {
                          "type": "string"
                        },
                        "subAccountID": {
                          "type": "string"
                        },
                        "clientBaseCcy": {
                          "type": "string"
                        },
                        "stopOrderType": {
                          "type": "string"
                        },
                        "tradingAccSeq": {
                          "type": "number"
                        },
                        "activationDate": {
                          "type": "string"
                        },
                        "instrumentName": {
                          "type": "string"
                        },
                        "userApprovalRemark": {
                          "type": "string"
                        },
                        "fee": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "amount": {
                                "type": "number"
                              },
                              "feeCName": {
                                "type": "string"
                              },
                              "feeID": {
                                "type": "string"
                              },
                              "feeName": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "orderNumber": {
                      "type": "string"
                    },
                    "orderGroupID": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Successfully"
          }
        }
      }
    },
    "/api/v1/services/eqt/broker/enterorder": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "clientID",
                  "code",
                  "orderType",
                  "marketType",
                  "sellBuyType",
                  "accountNumber",
                  "orderQuantity",
                  "phoneCode"
                ],
                "properties": {
                  "clientID": {
                    "type": "string",
                    "description": "clientID"
                  },
                  "code": {
                    "type": "string",
                    "description": "code"
                  },
                  "orderType": {
                    "type": "string",
                    "description": "orderType",
                    "enum": [
                      "ODDLOT",
                      "LO",
                      "ATC",
                      "ATO",
                      "MP",
                      "MTL",
                      "MAK",
                      "MOK",
                      "PLO"
                    ]
                  },
                  "expiryDate": {
                    "type": "string",
                    "description": "expiryDate"
                  },
                  "marketType": {
                    "type": "string",
                    "enum": [
                      "HOSE",
                      "HNX",
                      "UPCOM"
                    ],
                    "description": "marketType"
                  },
                  "orderPrice": {
                    "type": "number",
                    "description": "orderPrice"
                  },
                  "sellBuyType": {
                    "type": "string",
                    "enum": [
                      "BUY",
                      "SELL"
                    ],
                    "description": "sellBuyType"
                  },
                  "accountNumber": {
                    "type": "string",
                    "description": "accountNumber"
                  },
                  "orderQuantity": {
                    "type": "number",
                    "description": "orderQuantity"
                  },
                  "phoneCode": {
                    "type": "string",
                    "description": "pin of clientID"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "ORDER_ENTER",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "orderDetail": {
                      "type": "object",
                      "properties": {
                        "bs": {
                          "type": "string"
                        },
                        "ccy": {
                          "type": "string"
                        },
                        "qty": {
                          "type": "number"
                        },
                        "hedge": {
                          "type": "string"
                        },
                        "msQty": {
                          "type": "string"
                        },
                        "price": {
                          "type": "number"
                        },
                        "bankID": {
                          "type": "string"
                        },
                        "origin": {
                          "type": "string"
                        },
                        "orderID": {
                          "type": "string"
                        },
                        "bankACID": {
                          "type": "string"
                        },
                        "branchID": {
                          "type": "string"
                        },
                        "clientID": {
                          "type": "string"
                        },
                        "orderType": {
                          "type": "string"
                        },
                        "shortName": {
                          "type": "string"
                        },
                        "shortSell": {
                          "type": "string"
                        },
                        "stopPrice": {
                          "type": "number"
                        },
                        "holdAmText": {
                          "type": "string"
                        },
                        "timeInForce": {
                          "type": "string"
                        },
                        "allOrNothing": {
                          "type": "string"
                        },
                        "batchOrderID": {
                          "type": "string"
                        },
                        "goodTillDate": {
                          "type": "string"
                        },
                        "instrumentID": {
                          "type": "string"
                        },
                        "orderGroupID": {
                          "type": "string"
                        },
                        "subAccountID": {
                          "type": "string"
                        },
                        "clientBaseCcy": {
                          "type": "string"
                        },
                        "stopOrderType": {
                          "type": "string"
                        },
                        "tradingAccSeq": {
                          "type": "number"
                        },
                        "activationDate": {
                          "type": "string"
                        },
                        "instrumentName": {
                          "type": "string"
                        },
                        "userApprovalRemark": {
                          "type": "string"
                        },
                        "fee": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "amount": {
                                "type": "number"
                              },
                              "feeCName": {
                                "type": "string"
                              },
                              "feeID": {
                                "type": "string"
                              },
                              "feeName": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "orderNumber": {
                      "type": "string"
                    },
                    "orderGroupID": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Successfully"
          }
        }
      }
    },
    "/api/v1/services/eqt/getCashAdvanceHistory": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "accountNo",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "accountNo"
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "number"
            },
            "required": false,
            "description": "offset"
          },
          {
            "in": "query",
            "name": "fetchCount",
            "schema": {
              "type": "number"
            },
            "required": false,
            "description": "fetchCount"
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "status"
          },
          {
            "in": "query",
            "name": "fromDate",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "fromDate"
          },
          {
            "in": "query",
            "name": "toDate",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "toDate"
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "Cash in advance history",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "tax": {
                        "type": "number"
                      },
                      "date": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "channel": {
                        "type": "string"
                      },
                      "advanceFee": {
                        "type": "number"
                      },
                      "requestTime": {
                        "type": "string"
                      },
                      "receivingAmount": {
                        "type": "number"
                      },
                      "requireAdvanceAmount": {
                        "type": "number"
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/services/fno/cpcashDW": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "content": {
                    "type": "string",
                    "description": "content"
                  },
                  "transferType": {
                    "type": "string",
                    "description": "transferType"
                  },
                  "transferAmount": {
                    "type": "number",
                    "description": "transferAmount"
                  },
                  "sendingAccountNo": {
                    "type": "string",
                    "description": "sendingAccountNo"
                  },
                  "transferableAmount": {
                    "type": "number",
                    "description": "transferableAmount"
                  },
                  "beneficiaryAccountNo": {
                    "type": "string",
                    "description": "beneficiaryAccountNo"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          },
          {
            "otpToken": []
          }
        ],
        "summary": "DERIVATIVES_DEPOSIT_TO_VSD",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "transactionID": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Successfully"
          }
        }
      }
    },
    "/api/v1/services/eqt/dofundtransfer": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "content": {
                    "type": "string",
                    "description": "content"
                  },
                  "transferFee": {
                    "type": "number",
                    "description": "transferFee"
                  },
                  "transferType": {
                    "type": "string",
                    "description": "transferType"
                  },
                  "senderFullName": {
                    "type": "string",
                    "description": "senderFullName"
                  },
                  "transferAmount": {
                    "type": "number",
                    "description": "transferAmount"
                  },
                  "senderAccountNo": {
                    "type": "string",
                    "description": "senderAccountNo"
                  },
                  "transferableAmount": {
                    "type": "number",
                    "description": "transferableAmount"
                  },
                  "beneficiaryBankName": {
                    "type": "string",
                    "description": "beneficiaryBankName"
                  },
                  "beneficiaryFullName": {
                    "type": "string",
                    "description": "beneficiaryFullName"
                  },
                  "beneficiaryAccountNo": {
                    "type": "string",
                    "description": "beneficiaryAccountNo"
                  },
                  "beneficiaryBankBranch": {
                    "type": "string",
                    "description": "beneficiaryBankBranch"
                  },
                  "beneficiaryBankNumber": {
                    "type": "string",
                    "description": "beneficiaryBankNumber"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          },
          {
            "otpToken": []
          }
        ],
        "summary": "Transfer cash to bank or to sub account",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string"
                    },
                    "tranID": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Successfully"
          }
        }
      }
    },
    "/api/v1/services/eqt/enquiryportfolio": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "accountNumber",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "accountNumber"
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "number"
            },
            "required": false,
            "description": "offset"
          },
          {
            "in": "query",
            "name": "fetchCount",
            "schema": {
              "type": "number"
            },
            "required": false,
            "description": "fetchCount"
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "ENQUIRY_PORTFOLIO",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "summary": {
                        "type": "object",
                        "properties": {
                          "PP": {
                            "type": "number"
                          },
                          "dailyPL": {
                            "type": "number"
                          },
                          "profitLoss": {
                            "type": "number"
                          },
                          "marginRatio": {
                            "type": "number"
                          },
                          "marketValue": {
                            "type": "number"
                          },
                          "netAssetValue": {
                            "type": "number"
                          },
                          "profitLossPercent": {
                            "type": "number"
                          },
                          "totalStockMarketValue": {
                            "type": "number"
                          }
                        }
                      },
                      "accountNumber": {
                        "type": "string"
                      },
                      "portfolioList": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "right": {
                              "type": "number"
                            },
                            "value": {
                              "type": "number"
                            },
                            "others": {
                              "type": "number"
                            },
                            "symbol": {
                              "type": "string"
                            },
                            "weight": {
                              "type": "string"
                            },
                            "avgPrice": {
                              "type": "number"
                            },
                            "boughtT0": {
                              "type": "number"
                            },
                            "boughtT1": {
                              "type": "number"
                            },
                            "boughtT2": {
                              "type": "number"
                            },
                            "mortgage": {
                              "type": "number"
                            },
                            "sellable": {
                              "type": "number"
                            },
                            "totalVol": {
                              "type": "number"
                            },
                            "holdToSell": {
                              "type": "number"
                            },
                            "lendingRate": {
                              "type": "number"
                            },
                            "marketPrice": {
                              "type": "number"
                            },
                            "marketValue": {
                              "type": "number"
                            },
                            "awaitTrading": {
                              "type": "number"
                            },
                            "dayChangeValue": {
                              "type": "string"
                            },
                            "dayChangePercent": {
                              "type": "string"
                            },
                            "unrealizedPLValue": {
                              "type": "number"
                            },
                            "unrealizedPLPercent": {
                              "type": "number"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/stopOrder": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "toDate": {
                    "type": "string"
                  },
                  "fromDate": {
                    "type": "string"
                  },
                  "orderType": {
                    "type": "string"
                  },
                  "stopPrice": {
                    "type": "number"
                  },
                  "orderPrice": {
                    "type": "number",
                    "description": "If STOP, not needed"
                  },
                  "sellBuyType": {
                    "type": "string",
                    "description": "SELL|BUY"
                  },
                  "accountNumber": {
                    "type": "string"
                  },
                  "orderQuantity": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          },
          {
            "otpToken": []
          }
        ],
        "summary": "PLACE_STOP_ORDER",
        "tags": [
          "Conditional-orders"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/notifyMobileOtpKisTtl": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "forceSMS": {
                    "type": "boolean"
                  },
                  "matrixId": {
                    "type": "number"
                  },
                  "playerId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "NOTIFY_MOBILE_OTP",
        "tags": [
          "Otp"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/services/eqt/enquiryOddLot": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "accountNumber",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "accountNumber"
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "QUERY_ODDLOT_ORDERS",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "stock": {
                        "type": "string"
                      },
                      "marketId": {
                        "type": "string"
                      },
                      "oddLotQty": {
                        "type": "number"
                      },
                      "locationId": {
                        "type": "string"
                      },
                      "tradingQty": {
                        "type": "number"
                      },
                      "currentPrice": {
                        "type": "number"
                      },
                      "executedPrice": {
                        "type": "number"
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/services/eqt/getLocalAdvanceCreation": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "accountNo",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "accountNo"
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "LOCAL_ADVANCE_CREATION",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "maxFee": {
                      "type": "number"
                    },
                    "availableCashAdvance": {
                      "type": "number"
                    },
                    "t2AdvAvailable": {
                      "type": "number"
                    },
                    "t1AdvAvailable": {
                      "type": "number"
                    },
                    "t0AdvAvailable": {
                      "type": "number"
                    },
                    "t2Days": {
                      "type": "number"
                    },
                    "t1Days": {
                      "type": "number"
                    },
                    "t0Days": {
                      "type": "number"
                    },
                    "interestRate": {
                      "type": "number"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/resetPassword": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "clientID": {
                    "type": "string",
                    "description": "clientID"
                  },
                  "otpValue": {
                    "type": "string",
                    "description": "otpValue"
                  },
                  "newPassword": {
                    "type": "string",
                    "description": "newPassword"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "RESET_PASSWORD",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/services/eqt/queryCashTranHistory": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "subAccountID",
            "schema": {
              "type": "string"
            },
            "description": "subAccountID"
          },
          {
            "in": "query",
            "name": "mvStartDate",
            "schema": {
              "type": "string"
            },
            "description": "mvStartDate"
          },
          {
            "in": "query",
            "name": "mvEndDate",
            "schema": {
              "type": "string"
            },
            "description": "mvEndDate"
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "number"
            },
            "description": "offset"
          },
          {
            "in": "query",
            "name": "fetchCount",
            "schema": {
              "type": "number"
            },
            "description": "fetchCount"
          },
          {
            "in": "query",
            "name": "tradeType",
            "schema": {
              "type": "string"
            },
            "description": "tradeType"
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "CASH_TRANSACTION_HIS",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "list": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "fee": {
                            "type": "string"
                          },
                          "action": {
                            "type": "string"
                          },
                          "bankid": {
                            "type": "string"
                          },
                          "remark": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string"
                          },
                          "tranID": {
                            "type": "string"
                          },
                          "bankName": {
                            "type": "string"
                          },
                          "trandate": {
                            "type": "string"
                          },
                          "ownerName": {
                            "type": "string"
                          },
                          "transType": {
                            "type": "string"
                          },
                          "bankBranch": {
                            "type": "string"
                          },
                          "createTime": {
                            "type": "string"
                          },
                          "feePercent": {
                            "type": "string"
                          },
                          "settledDate": {
                            "type": "string"
                          },
                          "advByDateAmt": {
                            "type": "string"
                          },
                          "creationTime": {
                            "type": "string"
                          },
                          "inputChannel": {
                            "type": "string"
                          },
                          "waiveAllFlag": {
                            "type": "string"
                          },
                          "receiveBankID": {
                            "type": "string"
                          },
                          "interestAccured": {
                            "type": "string"
                          },
                          "receiveBankAcID": {
                            "type": "string"
                          },
                          "receiveClientID": {
                            "type": "string"
                          },
                          "totalLendingAmt": {
                            "type": "string"
                          },
                          "transferChannel": {
                            "type": "string"
                          },
                          "lastApprovaltime": {
                            "type": "string"
                          },
                          "receiveBankBranch": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/auth/matrix/genNewKisCard": {
      "post": {
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "KIS_GEN_MATRIX",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "wordMatrixId": {
                      "type": "number"
                    },
                    "wordMatrixKey": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Successfully"
          }
        }
      }
    },
    "/api/v1/services/fno/cancelorder": {
      "put": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "orderInfo": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "marketID": {
                          "type": "string",
                          "description": "marketID"
                        },
                        "validity": {
                          "type": "string",
                          "description": "validity"
                        },
                        "orderType": {
                          "type": "string",
                          "description": "orderType"
                        },
                        "symbolCode": {
                          "type": "string",
                          "description": "symbolCode"
                        },
                        "orderNumber": {
                          "type": "string",
                          "description": "orderNumber"
                        },
                        "sellBuyType": {
                          "type": "string",
                          "description": "sellBuyType"
                        },
                        "orderGroupID": {
                          "type": "string",
                          "description": "orderGroupID"
                        },
                        "validityDate": {
                          "type": "string",
                          "description": "validityDate"
                        },
                        "commodityName": {
                          "type": "string",
                          "description": "commodityName"
                        },
                        "contractMonth": {
                          "type": "string",
                          "description": "contractMonth"
                        }
                      }
                    }
                  },
                  "accountNumber": {
                    "type": "string",
                    "description": "accountNumber"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "DERIVATIVES_CANCEL_ORDER",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "orderNo": {
                        "type": "boolean"
                      },
                      "success": {
                        "type": "boolean"
                      },
                      "rejectCause": {
                        "type": "boolean"
                      },
                      "orderGroupNo": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/services/eqt/hksStockTransactionHistory": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "accountNumber",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "accountNumber"
          },
          {
            "in": "query",
            "name": "fromDate",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "fromDate"
          },
          {
            "in": "query",
            "name": "toDate",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "toDate"
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "number"
            },
            "required": false,
            "description": "offset"
          },
          {
            "in": "query",
            "name": "fetchCount",
            "schema": {
              "type": "number"
            },
            "required": false,
            "description": "fetchCount"
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "Securities Statements",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "list": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "fee": {
                            "type": "string"
                          },
                          "tax": {
                            "type": "string"
                          },
                          "stock": {
                            "type": "string"
                          },
                          "action": {
                            "type": "string"
                          },
                          "feeTax": {
                            "type": "number"
                          },
                          "orderNo": {
                            "type": "string"
                          },
                          "debitQty": {
                            "type": "number"
                          },
                          "creditQty": {
                            "type": "number"
                          },
                          "debitAmount": {
                            "type": "number"
                          },
                          "description": {
                            "type": "string"
                          },
                          "creditAmount": {
                            "type": "number"
                          },
                          "debitAvgPrice": {
                            "type": "number"
                          },
                          "creditAvgPrice": {
                            "type": "number"
                          },
                          "transactionDate": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "totalCount": {
                      "type": "number"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/services/eqt/submitOddLot": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "oddLotList": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "qty": {
                          "type": "number",
                          "description": "qty"
                        },
                        "stockId": {
                          "type": "string",
                          "description": "stockId"
                        },
                        "marketId": {
                          "type": "string",
                          "description": "marketId"
                        },
                        "locationId": {
                          "type": "string",
                          "description": "locationId"
                        }
                      }
                    },
                    "description": "oddLotList"
                  },
                  "accountNumber": {
                    "type": "string",
                    "description": "accountNumber"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "register oddlot",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "mvResult": {
                      "type": "string"
                    },
                    "savedAuthen": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Successfully"
          }
        }
      }
    },
    "/api/v1/services/eqt/getEntitlementHistory": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "accountNumber",
            "schema": {
              "type": "string"
            },
            "description": "accountNumber"
          },
          {
            "in": "query",
            "name": "symbol",
            "schema": {
              "type": "string"
            },
            "description": "symbol"
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string"
            },
            "description": "status"
          },
          {
            "in": "query",
            "name": "fromDate",
            "schema": {
              "type": "string"
            },
            "description": "fromDate"
          },
          {
            "in": "query",
            "name": "toDate",
            "schema": {
              "type": "string"
            },
            "description": "fromDate"
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "number"
            },
            "description": "offset"
          },
          {
            "in": "query",
            "name": "fetchCount",
            "schema": {
              "type": "number"
            },
            "description": "fetchCount"
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "Right Information subscription history",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "ratio": {
                        "type": "number"
                      },
                      "remark": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "symbol": {
                        "type": "string"
                      },
                      "closedDate": {
                        "type": "string"
                      },
                      "rightStock": {
                        "type": "string"
                      },
                      "executeDate": {
                        "type": "string"
                      },
                      "offeringPrice": {
                        "type": "number"
                      },
                      "registeredQty": {
                        "type": "number"
                      },
                      "registeredTime": {
                        "type": "string"
                      },
                      "purchasedAmount": {
                        "type": "number"
                      },
                      "lastRegistrationDate": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/services/eqt/changepassword": {
      "put": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "clientID": {
                    "type": "string",
                    "description": "clientID"
                  },
                  "newPassword": {
                    "type": "string",
                    "description": "newPassword"
                  },
                  "oldPassword": {
                    "type": "string",
                    "description": "oldPassword"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "CHANGE_PASSWORD",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "description": "Successfully"
          }
        }
      }
    },
    "/api/v1/services/eqt/submitLoanConfirm": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "boolean",
                    "description": "status"
                  },
                  "signable": {
                    "type": "boolean",
                    "description": "signable"
                  },
                  "dateConfirm": {
                    "type": "string",
                    "description": "dateConfirm"
                  },
                  "accountNumber": {
                    "type": "string",
                    "description": "accountNumber"
                  },
                  "applicationID": {
                    "type": "string",
                    "description": "applicationID"
                  },
                  "endingBalance": {
                    "type": "number",
                    "description": "endingBalance"
                  },
                  "applicationDate": {
                    "type": "string",
                    "description": "applicationDate"
                  },
                  "outstandingInterest": {
                    "type": "number",
                    "description": "outstandingInterest"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "SUBMIT_LOAN_CONFIRM",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "mainResult": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Successfully"
          }
        }
      }
    },
    "/api/v1/services/fno/cashDW": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "content": {
                    "type": "string",
                    "description": "content"
                  },
                  "transferFee": {
                    "type": "number",
                    "description": "transferFee"
                  },
                  "transferType": {
                    "type": "string",
                    "description": "transferType"
                  },
                  "transferAmount": {
                    "type": "number",
                    "description": "transferAmount"
                  },
                  "beneficiaryBank": {
                    "type": "string",
                    "description": "beneficiaryBank"
                  },
                  "sendingFullName": {
                    "type": "string",
                    "description": "sendingFullName"
                  },
                  "transferableAmount": {
                    "type": "number",
                    "description": "transferableAmount"
                  },
                  "beneficiaryFullName": {
                    "type": "string",
                    "description": "beneficiaryFullName"
                  },
                  "sendingAccountNumber": {
                    "type": "string",
                    "description": "sendingAccountNumber"
                  },
                  "beneficiaryBankBranch": {
                    "type": "string",
                    "description": "beneficiaryBankBranch"
                  },
                  "beneficiaryAccountNumber": {
                    "type": "string",
                    "description": "beneficiaryAccountNumber"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "DERIVATIVES_TRANSFER_CASH_TO_BANK",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tranID": {
                      "type": "string"
                    },
                    "dwChannel": {
                      "type": "string"
                    },
                    "transferFee": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Successfully"
          }
        }
      }
    },
    "/api/v1/services/fno/queryclientcashbalance": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "accountNo",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "accountNo"
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "DERIVATIVES_CASH_BALANCE",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accountSummary": {
                      "type": "object",
                      "properties": {
                        "totalStockMarketValue": {
                          "type": "number"
                        },
                        "dailyPL": {
                          "type": "number"
                        },
                        "netAssetValue": {
                          "type": "number"
                        },
                        "totalEquity": {
                          "type": "number"
                        },
                        "accountBalance": {
                          "type": "number"
                        },
                        "commission_tax": {
                          "type": "string"
                        },
                        "interest": {
                          "type": "number"
                        },
                        "extLoan": {
                          "type": "number"
                        },
                        "deliveryAmount": {
                          "type": "number"
                        },
                        "floatingPL_tradingPL": {
                          "type": "string"
                        },
                        "totalPL": {
                          "type": "number"
                        },
                        "minReserve": {
                          "type": "number"
                        },
                        "marginable": {
                          "type": "number"
                        },
                        "rcCall": {
                          "type": "number"
                        },
                        "cash_nonCash": {
                          "type": "string"
                        }
                      }
                    },
                    "portfolioAssessment": {
                      "type": "object",
                      "properties": {
                        "internal": {
                          "type": "object",
                          "properties": {
                            "initialMargin": {
                              "type": "number"
                            },
                            "spreadMargin": {
                              "type": "number"
                            },
                            "deliveryMargin": {
                              "type": "number"
                            },
                            "marginReq": {
                              "type": "number"
                            },
                            "accountRatio": {
                              "type": "number"
                            },
                            "warning123": {
                              "type": "string"
                            },
                            "marginCall": {
                              "type": "number"
                            }
                          }
                        },
                        "exchange": {
                          "type": "object",
                          "properties": {
                            "initialMargin": {
                              "type": "number"
                            },
                            "spreadMargin": {
                              "type": "number"
                            },
                            "deliveryMargin": {
                              "type": "number"
                            },
                            "marginReq": {
                              "type": "number"
                            },
                            "accountRatio": {
                              "type": "number"
                            },
                            "warning123": {
                              "type": "string"
                            },
                            "marginCall": {
                              "type": "number"
                            }
                          }
                        }
                      }
                    },
                    "cashInformation": {
                      "type": "object",
                      "properties": {
                        "internal": {
                          "type": "object",
                          "properties": {
                            "cash": {
                              "type": "number"
                            },
                            "totalValue": {
                              "type": "number"
                            },
                            "cashWithdrawable": {
                              "type": "number"
                            },
                            "EE": {
                              "type": "number"
                            }
                          }
                        },
                        "exchange": {
                          "type": "object",
                          "properties": {
                            "cash": {
                              "type": "number"
                            },
                            "totalValue": {
                              "type": "number"
                            },
                            "cashWithdrawable": {
                              "type": "number"
                            },
                            "EE": {
                              "type": "number"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/verifyAndSaveOTP": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "expireTime": {
                    "type": "number"
                  },
                  "verifyType": {
                    "type": "string",
                    "description": "hard code MATRIX_CARD"
                  },
                  "wordMatrixId": {
                    "type": "number"
                  },
                  "wordMatrixValue": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "VERIFY_SAVE_OTP_TOKEN",
        "tags": [
          "Otp"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "otpToken": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/services/speedOrder/modify": {
      "put": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "market": {
                    "type": "string",
                    "description": "market"
                  },
                  "stockCode": {
                    "type": "string",
                    "description": "stockCode"
                  },
                  "orderPrice": {
                    "type": "number",
                    "description": "orderPrice"
                  },
                  "accountType": {
                    "type": "string",
                    "description": "accountType"
                  },
                  "sellBuyType": {
                    "type": "string",
                    "description": "sellBuyType"
                  },
                  "accountNumber": {
                    "type": "string",
                    "description": "accountNumber"
                  },
                  "newOrderPrice": {
                    "type": "number",
                    "description": "newOrderPrice"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "SPEED_ORDER_MODIFY",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "price": {
                            "type": "number"
                          },
                          "orderNo": {
                            "type": "string"
                          },
                          "success": {
                            "type": "boolean"
                          },
                          "quantity": {
                            "type": "number"
                          },
                          "pendingQty": {
                            "type": "number"
                          },
                          "orderGroupNo": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "orderId": {
                            "type": "string"
                          },
                          "orderGroupId": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            },
            "description": "Successfully"
          }
        }
      }
    },
    "/api/v1/services/fno/enterorder": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "description": "code"
                  },
                  "validity": {
                    "type": "string",
                    "description": "validity"
                  },
                  "orderType": {
                    "type": "string",
                    "description": "orderType"
                  },
                  "orderPrice": {
                    "type": "number",
                    "description": "orderPrice"
                  },
                  "sellBuyType": {
                    "type": "string",
                    "description": "sellBuyType"
                  },
                  "accountNumber": {
                    "type": "string",
                    "description": "accountNumber"
                  },
                  "orderQuantity": {
                    "type": "number",
                    "description": "orderQuantity"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "DERIVATIVES_place_ORDER",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "orderNumber": {
                      "type": "string"
                    },
                    "orderGroupID": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Successfully"
          }
        }
      }
    },
    "/api/v1/services/eqt/hksCashTransactionHistory": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "accountNo",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "accountNo"
          },
          {
            "in": "query",
            "name": "transferType",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "transferType"
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "status"
          },
          {
            "in": "query",
            "name": "fromDate",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "fromDate"
          },
          {
            "in": "query",
            "name": "toDate",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "toDate"
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "number"
            },
            "required": false,
            "description": "offset"
          },
          {
            "in": "query",
            "name": "fetchCount",
            "schema": {
              "type": "number"
            },
            "required": false,
            "description": "fetchCount"
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "Transfer cash to internal sub account history",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "list": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "date": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string"
                          },
                          "beneficiary": {
                            "type": "string"
                          },
                          "transferFee": {
                            "type": "string"
                          },
                          "transferType": {
                            "type": "string"
                          },
                          "transferAmount": {
                            "type": "number"
                          },
                          "beneficiaryBank": {
                            "type": "string"
                          },
                          "transferAccount": {
                            "type": "string"
                          },
                          "beneficiaryAccNo": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "totalCount": {
                      "type": "number"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/services/eqt/checkFundTransferTime": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "accountNo",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "accountNo"
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "TRANSFER_STOCK_CHECKTIME",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/stopOrder/cancel/multi": {
      "put": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "idList": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          },
          {
            "otpToken": []
          }
        ],
        "summary": "CANCEL_MULTI_STOP_ORDERS",
        "tags": [
          "Conditional-orders"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/services/eqt/getclientdetail": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "clientID",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "clientID"
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "CLIENT_DETAIL",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "customerProfile": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string"
                        },
                        "address": {
                          "type": "string"
                        },
                        "userName": {
                          "type": "string"
                        },
                        "accountNo": {
                          "type": "string"
                        },
                        "telephone": {
                          "type": "string"
                        },
                        "branchName": {
                          "type": "string"
                        },
                        "customerID": {
                          "type": "string"
                        },
                        "brokersName": {
                          "type": "string"
                        },
                        "mobilePhone": {
                          "type": "string"
                        },
                        "brokersEmail": {
                          "type": "string"
                        },
                        "customerType": {
                          "type": "string"
                        },
                        "IDNumberPassport": {
                          "type": "string"
                        },
                        "authorizedPerson": {
                          "type": "boolean"
                        },
                        "brokersContactNo": {
                          "type": "string"
                        }
                      }
                    },
                    "authorizedPerson": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string"
                        },
                        "exist": {
                          "type": "boolean"
                        },
                        "address": {
                          "type": "string"
                        },
                        "telephone": {
                          "type": "string"
                        },
                        "IDCardPassport": {
                          "type": "string"
                        },
                        "authorizedPersonsID": {
                          "type": "string"
                        },
                        "authorizedPersonsName": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/services/eqt/oddLotHistoryEnquiry": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "accountNumber",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "accountNumber"
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "number"
            },
            "required": false,
            "description": "offset"
          },
          {
            "in": "query",
            "name": "fetchCount",
            "schema": {
              "type": "number"
            },
            "required": false,
            "description": "fetchCount"
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "ODDLOT_HISTORY",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "fee": {
                        "type": "number"
                      },
                      "tax": {
                        "type": "number"
                      },
                      "stock": {
                        "type": "string"
                      },
                      "value": {
                        "type": "number"
                      },
                      "status": {
                        "type": "string"
                      },
                      "oddLotQty": {
                        "type": "number"
                      },
                      "approveDate": {
                        "type": "string"
                      },
                      "executedPrice": {
                        "type": "number"
                      },
                      "transactionDate": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/services/fno/signorderenquiry": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "accountNo",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "accountNo"
          },
          {
            "in": "query",
            "name": "stockSymbol",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "stockSymbol"
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "status"
          },
          {
            "in": "query",
            "name": "fromDate",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "fromDate"
          },
          {
            "in": "query",
            "name": "toDate",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "toDate"
          },
          {
            "in": "query",
            "name": "channel",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "channel"
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "number"
            },
            "required": false,
            "description": "offset"
          },
          {
            "in": "query",
            "name": "fetchCount",
            "schema": {
              "type": "number"
            },
            "required": false,
            "description": "fetchCount"
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "DERIVATIVES_query sign order confirmation",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "price": {
                        "type": "number"
                      },
                      "refID": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "volume": {
                        "type": "number"
                      },
                      "channel": {
                        "type": "string"
                      },
                      "orderNo": {
                        "type": "string"
                      },
                      "accountNo": {
                        "type": "string"
                      },
                      "isHistory": {
                        "type": "string"
                      },
                      "orderType": {
                        "type": "string"
                      },
                      "stockSymbol": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/services/fno/clientcashbalanceshortver": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "accountNo",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "accountNo"
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "DERIVATIVES_CASH_BALANCE_SHORT_VERSION",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "transferableAmountOfVSDAccount": {
                      "type": "number"
                    },
                    "transferableAmountToVSDAccount": {
                      "type": "number"
                    },
                    "transferableAmountToInternalSubsOrToBank": {
                      "type": "number"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/services/eqt/getEntitlementStockList": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "accountNumber",
            "schema": {
              "type": "string"
            },
            "description": "accountNumber"
          },
          {
            "in": "query",
            "name": "entitlementID",
            "schema": {
              "type": "string"
            },
            "description": "entitlementID"
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "STOCK_ENTITLEMENT",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ratio": {
                      "type": "string"
                    },
                    "marketId": {
                      "type": "string"
                    },
                    "rightQty": {
                      "type": "number"
                    },
                    "closedDate": {
                      "type": "string"
                    },
                    "locationId": {
                      "type": "string"
                    },
                    "symbolCode": {
                      "type": "string"
                    },
                    "accountName": {
                      "type": "string"
                    },
                    "companyName": {
                      "type": "string"
                    },
                    "interfaceSeq": {
                      "type": "string"
                    },
                    "cashAvailable": {
                      "type": "number"
                    },
                    "entitlementId": {
                      "type": "string"
                    },
                    "offeringPrice": {
                      "type": "number"
                    },
                    "securitiesType": {
                      "type": "string"
                    },
                    "bankAccountNumber": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/resetPassword/verifyIdentity": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "email"
                  },
                  "locale": {
                    "type": "string",
                    "description": "locale"
                  },
                  "phoneNo": {
                    "type": "string",
                    "description": "phoneNo"
                  },
                  "birthDay": {
                    "type": "string",
                    "description": "birthDay"
                  },
                  "clientID": {
                    "type": "string",
                    "description": "clientID"
                  },
                  "idCardNo": {
                    "type": "string",
                    "description": "idCardNo"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "RESET_PASSWORD_VERIFY_IDENTITY",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "matrixKey": {
                      "type": "string"
                    },
                    "verificationExpiresAt": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Successfully"
          }
        }
      }
    },
    "/api/v1/services/fno/transactionhistory": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "subAccountID",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "subAccountID"
          },
          {
            "in": "query",
            "name": "language",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "language"
          },
          {
            "in": "query",
            "name": "fromDate",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "fromDate"
          },
          {
            "in": "query",
            "name": "toDate",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "toDate"
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "number"
            },
            "required": false,
            "description": "offset"
          },
          {
            "in": "query",
            "name": "fetchCount",
            "schema": {
              "type": "number"
            },
            "required": false,
            "description": "fetchCount"
          },
          {
            "in": "query",
            "name": "tranType",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "tranType"
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "DERIVATIVES_CASH_STATEMENT",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "number"
                    },
                    "endingBalance": {
                      "type": "number"
                    },
                    "beginningBalance": {
                      "type": "number"
                    },
                    "listTransactionHistory": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "remarks": {
                            "type": "string"
                          },
                          "txnType": {
                            "type": "string"
                          },
                          "tranType": {
                            "type": "string"
                          },
                          "valueDate": {
                            "type": "string"
                          },
                          "brokerDebit": {
                            "type": "number"
                          },
                          "clientDebit": {
                            "type": "number"
                          },
                          "brokerCredit": {
                            "type": "number"
                          },
                          "clientCredit": {
                            "type": "number"
                          },
                          "creationTime": {
                            "type": "string"
                          },
                          "counterPartyAC": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/services/eqt/queryCashTranHisReport": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "accountNo",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "accountNo"
          },
          {
            "in": "query",
            "name": "transactionType",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "transactionType"
          },
          {
            "in": "query",
            "name": "fromDate",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "fromDate"
          },
          {
            "in": "query",
            "name": "toDate",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "toDate"
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "number"
            },
            "required": false,
            "description": "offset"
          },
          {
            "in": "query",
            "name": "fetchCount",
            "schema": {
              "type": "number"
            },
            "required": false,
            "description": "fetchCount"
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "Cash statements",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "list": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "no": {
                            "type": "number"
                          },
                          "date": {
                            "type": "string"
                          },
                          "balance": {
                            "type": "number"
                          },
                          "debitAmount": {
                            "type": "number"
                          },
                          "description": {
                            "type": "string"
                          },
                          "creditAmount": {
                            "type": "number"
                          },
                          "transactionType": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "endingBalance": {
                      "type": "number"
                    },
                    "beginningBalance": {
                      "type": "number"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/services/fno/cashtransfer": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "content": {
                    "type": "string",
                    "description": "content"
                  },
                  "transferType": {
                    "type": "string",
                    "description": "transferType"
                  },
                  "accountNumber": {
                    "type": "string",
                    "description": "accountNumber"
                  },
                  "transferAmount": {
                    "type": "number",
                    "description": "transferAmount"
                  },
                  "transferableAmount": {
                    "type": "number",
                    "description": "transferableAmount"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "DERIVATIVES_TRANSFER_CASH_TO_SUB_ACCOUNTS",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tranID": {
                      "type": "string"
                    },
                    "dwChannel": {
                      "type": "string"
                    },
                    "transferFee": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Successfully"
          }
        }
      }
    },
    "/api/v1/services/eqt/getAmountAvaibleForFundTransfer": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "accountNo",
            "schema": {
              "type": "string"
            },
            "description": "accountNo"
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "FUND_TRANSFER_AVAILABLE_AMOUNT",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "mvResult": {
                      "type": "string"
                    },
                    "mvAvailable": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/services/eqt/queryAccountSummary": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "clientID",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "clientID is required only for broker"
          },
          {
            "in": "query",
            "name": "accountNumber",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "accountNumber"
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "ACCOUNT_SUMMARY",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "mvAccountBalanceSummary": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "creditLimit": {
                            "type": "string",
                            "description": "creditLimit"
                          },
                          "drawAbleBal": {
                            "type": "string",
                            "description": "drawAbleBal"
                          },
                          "marginCallF": {
                            "type": "string",
                            "description": "marginCallF"
                          },
                          "tradAbleBal": {
                            "type": "string",
                            "description": "tradAbleBal"
                          },
                          "marginValueF": {
                            "type": "number",
                            "description": "marginValueF"
                          },
                          "cashHoldValue": {
                            "type": "number",
                            "description": "cashHoldValue"
                          },
                          "advanceAbleAmt": {
                            "type": "string",
                            "description": "advanceAbleAmt"
                          },
                          "ct1UnsettleBuy": {
                            "type": "string",
                            "description": "ct1UnsettleBuy"
                          },
                          "ct2UnsettleBuy": {
                            "type": "string",
                            "description": "ct2UnsettleBuy"
                          },
                          "ct3UnsettleBuy": {
                            "type": "string",
                            "description": "ct3UnsettleBuy"
                          },
                          "stockHoldValue": {
                            "type": "number",
                            "description": "stockHoldValue"
                          },
                          "ct1UnsettleSell": {
                            "type": "string",
                            "description": "ct1UnsettleSell"
                          },
                          "ct2UnsettleSell": {
                            "type": "string",
                            "description": "ct2UnsettleSell"
                          },
                          "ct3UnsettleSell": {
                            "type": "string",
                            "description": "ct3UnsettleSell"
                          },
                          "isMarginAccount": {
                            "type": "boolean",
                            "description": "isMarginAccount"
                          },
                          "loanOutStandingF": {
                            "type": "string",
                            "description": "loanOutStandingF"
                          },
                          "marginAbleValueF": {
                            "type": "string",
                            "description": "marginAbleValueF"
                          },
                          "marginExpiryDate": {
                            "type": "string",
                            "description": "marginExpiryDate"
                          },
                          "pendingBuySettle": {
                            "type": "string",
                            "description": "pendingBuySettle"
                          },
                          "stockMarketValue": {
                            "type": "number",
                            "description": "stockMarketValue"
                          },
                          "tMortgageHoldAmt": {
                            "type": "string",
                            "description": "tMortgageHoldAmt"
                          },
                          "ctoDayUnsettleBuy": {
                            "type": "string",
                            "description": "ctoDayUnsettleBuy"
                          },
                          "ctoDayUnsettleSell": {
                            "type": "string",
                            "description": "ctoDayUnsettleSell"
                          },
                          "debitAccruedInterest": {
                            "type": "string",
                            "description": "debitAccruedInterest"
                          },
                          "totalOutStandingAdvance": {
                            "type": "string",
                            "description": "totalOutStandingAdvance"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/services/eqt/listInstrumenPortfolio": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "accountNo",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "accountNo"
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "STOCK_TRANSFERABLE_INFO",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "marketID": {
                        "type": "string"
                      },
                      "stockType": {
                        "type": "string"
                      },
                      "stockSymbol": {
                        "type": "string"
                      },
                      "availableVolume": {
                        "type": "number"
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/services/eqt/modifyOrder": {
      "put": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "market": {
                    "type": "string",
                    "description": "market"
                  },
                  "orderNo": {
                    "type": "string",
                    "description": "orderNo"
                  },
                  "newPrice": {
                    "type": "number",
                    "description": "newPrice"
                  },
                  "accountNo": {
                    "type": "string",
                    "description": "accountNo"
                  },
                  "newQuantity": {
                    "type": "number",
                    "description": "newQuantity"
                  },
                  "stockSymbol": {
                    "type": "string",
                    "description": "stockSymbol"
                  },
                  "orderGroupNo": {
                    "type": "string",
                    "description": "orderGroupNo"
                  },
                  "originalQuantity": {
                    "type": "number",
                    "description": "originalQuantity"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "ORDER_MODIFY",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "price": {
                      "type": "number"
                    },
                    "orderNo": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "quantity": {
                      "type": "number"
                    },
                    "pendingQty": {
                      "type": "number"
                    },
                    "orderGroupNo": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Successfully"
          }
        }
      }
    },
    "/api/v1/services/eqt/getAdditionIssueShareInfo": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "accountNumber",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "accountNumber"
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "number"
            },
            "required": false,
            "description": "offset"
          },
          {
            "in": "query",
            "name": "fetchCount",
            "schema": {
              "type": "number"
            },
            "required": false,
            "description": "fetchCount"
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "Right Information",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "ratio": {
                        "type": "string"
                      },
                      "amount": {
                        "type": "number"
                      },
                      "status": {
                        "type": "number"
                      },
                      "symbol": {
                        "type": "string"
                      },
                      "marketID": {
                        "type": "string"
                      },
                      "closedDate": {
                        "type": "string"
                      },
                      "locationID": {
                        "type": "string"
                      },
                      "rightStock": {
                        "type": "string"
                      },
                      "entitlementId": {
                        "type": "string"
                      },
                      "offeringPrice": {
                        "type": "number"
                      },
                      "registeredQty": {
                        "type": "number"
                      },
                      "purchaseAmount": {
                        "type": "number"
                      },
                      "initialRightQty": {
                        "type": "number"
                      },
                      "qtyAtClosedDate": {
                        "type": "string"
                      },
                      "availableRightQty": {
                        "type": "number"
                      },
                      "lastRegistrationDate": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/services/eqt/genfundtransfer": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "accountNo",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "accountNo"
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "Info transfer cash to internal sub account (transferable amount...)",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "clientID": {
                      "type": "string"
                    },
                    "transferableAmount": {
                      "type": "number"
                    },
                    "beneficiaryAccountList": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "bankName": {
                            "type": "string"
                          },
                          "fullName": {
                            "type": "string"
                          },
                          "accountNo": {
                            "type": "string"
                          },
                          "bankBranch": {
                            "type": "string"
                          },
                          "transferFee": {
                            "type": "number"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/services/fno/submitsignorder": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "content": {
                    "type": "string",
                    "description": "content"
                  },
                  "transferType": {
                    "type": "string",
                    "description": "transferType"
                  },
                  "accountNumber": {
                    "type": "string",
                    "description": "accountNumber"
                  },
                  "transferAmount": {
                    "type": "number",
                    "description": "transferAmount"
                  },
                  "transferableAmount": {
                    "type": "number",
                    "description": "transferableAmount"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "DERIVATIVES_SUBMIT_ORDER_CONFIRMATION",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tranID": {
                      "type": "string"
                    },
                    "dwChannel": {
                      "type": "string"
                    },
                    "transferFee": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Successfully"
          }
        }
      }
    },
    "/api/v1/stopOrder/speedCancel": {
      "put": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "stopPrice": {
                    "type": "number"
                  },
                  "sellBuyType": {
                    "type": "string"
                  },
                  "accountNumber": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          },
          {
            "otpToken": []
          }
        ],
        "summary": "SPEED_CANCEL_STOP_ORDERS",
        "tags": [
          "Conditional-orders"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/changelanguage": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "language": {
                    "enum": [
                      "vi",
                      "en",
                      "ko"
                    ],
                    "type": "string",
                    "description": "language"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "CHANGE_LANGUAGE",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "description": "Successfully"
          }
        }
      }
    },
    "/api/v1/services/eqt/stockInfo": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "accountNumber",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "accountNumber"
          },
          {
            "in": "query",
            "name": "symbolCode",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "symbolCode"
          },
          {
            "in": "query",
            "name": "market",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "market"
          },
          {
            "in": "query",
            "name": "sellBuyType",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "sellBuyType"
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "STOCK info: PP, margin",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "PP": {
                      "type": "number"
                    },
                    "marginRatio": {
                      "type": "number"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/services/fno/orderaudit": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "accountNumber",
            "schema": {
              "type": "string"
            },
            "description": "accountNumber"
          },
          {
            "in": "query",
            "name": "orderGroupID",
            "schema": {
              "type": "string"
            },
            "description": "orderGroupID"
          },
          {
            "in": "query",
            "name": "orderID",
            "schema": {
              "type": "string"
            },
            "description": "orderID"
          },
          {
            "in": "query",
            "name": "isHistory",
            "schema": {
              "type": "boolean"
            },
            "description": "isHistory"
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "DERIVATIVES_ORDER_AUDIT",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "time": {
                        "type": "string"
                      },
                      "price": {
                        "type": "number"
                      },
                      "action": {
                        "type": "string"
                      },
                      "remark": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "orderId": {
                        "type": "string"
                      },
                      "quantity": {
                        "type": "number"
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/services/eqt/genbuyall": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "accountNo",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "accountNo"
          },
          {
            "in": "query",
            "name": "symbolCode",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "symbolCode"
          },
          {
            "in": "query",
            "name": "market",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "market"
          },
          {
            "in": "query",
            "name": "price",
            "schema": {
              "type": "number"
            },
            "required": true,
            "description": "price"
          },
          {
            "in": "query",
            "name": "sellBuyType",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "sellBuyType"
          },
          {
            "in": "query",
            "name": "PP",
            "schema": {
              "type": "number"
            },
            "required": true,
            "description": "PP"
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "GET_MAX_QTTY_WHEN_ORDERING",
        "tags": [
          "Ttl-based"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "maxQtty": {
                      "type": "number"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/stopOrder/speedModify": {
      "put": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "stopPrice": {
                    "type": "number"
                  },
                  "sellBuyType": {
                    "type": "string"
                  },
                  "newStopPrice": {
                    "type": "number"
                  },
                  "accountNumber": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          },
          {
            "otpToken": []
          }
        ],
        "summary": "MODIFY_ALL_STOP_ORDERS",
        "tags": [
          "Conditional-orders"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      }
    }
  }
}
